{"version":3,"file":"index.js","sources":["../js/tile.js","../js/grid.js","../js/game_manager.js","../js/keyboard_input_manager.js","../js/html_actuator.js","../js/local_storage_manager.js","../src/index.js"],"sourcesContent":["function Tile(position, value) {\n  this.x                = position.x;\n  this.y                = position.y;\n  this.value            = value || 2;\n\n  this.previousPosition = null;\n  this.mergedFrom       = null; // Tracks tiles that merged together\n}\n\nTile.prototype.savePosition = function () {\n  this.previousPosition = { x: this.x, y: this.y };\n};\n\nTile.prototype.updatePosition = function (position) {\n  this.x = position.x;\n  this.y = position.y;\n};\n\nTile.prototype.serialize = function () {\n  return {\n    position: {\n      x: this.x,\n      y: this.y\n    },\n    value: this.value\n  };\n};\n\nexport default Tile;\n","import Tile from './tile';\n\nfunction Grid(size, previousState) {\n  this.size = size;\n  this.cells = previousState ? this.fromState(previousState) : this.empty();\n}\n\n// Build a grid of the specified size\nGrid.prototype.empty = function () {\n  var cells = [];\n\n  for (var x = 0; x < this.size; x++) {\n    var row = cells[x] = [];\n\n    for (var y = 0; y < this.size; y++) {\n      row.push(null);\n    }\n  }\n\n  return cells;\n};\n\nGrid.prototype.fromState = function (state) {\n  var cells = [];\n\n  for (var x = 0; x < this.size; x++) {\n    var row = cells[x] = [];\n\n    for (var y = 0; y < this.size; y++) {\n      var tile = state[x][y];\n      row.push(tile ? new Tile(tile.position, tile.value) : null);\n    }\n  }\n\n  return cells;\n};\n\n// Find the first available random position\nGrid.prototype.randomAvailableCell = function () {\n  var cells = this.availableCells();\n\n  if (cells.length) {\n    return cells[Math.floor(Math.random() * cells.length)];\n  }\n};\n\nGrid.prototype.availableCells = function () {\n  var cells = [];\n\n  this.eachCell(function (x, y, tile) {\n    if (!tile) {\n      cells.push({ x: x, y: y });\n    }\n  });\n\n  return cells;\n};\n\n// Call callback for every cell\nGrid.prototype.eachCell = function (callback) {\n  for (var x = 0; x < this.size; x++) {\n    for (var y = 0; y < this.size; y++) {\n      callback(x, y, this.cells[x][y]);\n    }\n  }\n};\n\n// Check if there are any cells available\nGrid.prototype.cellsAvailable = function () {\n  return !!this.availableCells().length;\n};\n\n// Check if the specified cell is taken\nGrid.prototype.cellAvailable = function (cell) {\n  return !this.cellOccupied(cell);\n};\n\nGrid.prototype.cellOccupied = function (cell) {\n  return !!this.cellContent(cell);\n};\n\nGrid.prototype.cellContent = function (cell) {\n  if (this.withinBounds(cell)) {\n    return this.cells[cell.x][cell.y];\n  } else {\n    return null;\n  }\n};\n\n// Inserts a tile at its position\nGrid.prototype.insertTile = function (tile) {\n  this.cells[tile.x][tile.y] = tile;\n};\n\nGrid.prototype.removeTile = function (tile) {\n  this.cells[tile.x][tile.y] = null;\n};\n\nGrid.prototype.withinBounds = function (position) {\n  return position.x >= 0 && position.x < this.size &&\n         position.y >= 0 && position.y < this.size;\n};\n\nGrid.prototype.serialize = function () {\n  var cellState = [];\n\n  for (var x = 0; x < this.size; x++) {\n    var row = cellState[x] = [];\n\n    for (var y = 0; y < this.size; y++) {\n      row.push(this.cells[x][y] ? this.cells[x][y].serialize() : null);\n    }\n  }\n\n  return {\n    size: this.size,\n    cells: cellState\n  };\n};\n\nexport default Grid;\n","import Grid from './grid';\nimport Tile from './tile';\n\nfunction GameManager(size, InputManager, Actuator, StorageManager) {\n  this.size           = size; // Size of the grid\n  this.inputManager   = new InputManager;\n  this.storageManager = new StorageManager;\n  this.actuator       = new Actuator;\n\n  this.startTiles     = 2;\n\n  this.inputManager.on(\"move\", this.move.bind(this));\n  this.inputManager.on(\"restart\", this.restart.bind(this));\n  this.inputManager.on(\"keepPlaying\", this.keepPlaying.bind(this));\n\n  this.setup();\n}\n\n// Restart the game\nGameManager.prototype.restart = function () {\n  this.storageManager.clearGameState();\n  this.actuator.continueGame(); // Clear the game won/lost message\n  this.setup();\n};\n\n// Keep playing after winning (allows going over 2048)\nGameManager.prototype.keepPlaying = function () {\n  this.keepPlaying = true;\n  this.actuator.continueGame(); // Clear the game won/lost message\n};\n\n// Return true if the game is lost, or has won and the user hasn't kept playing\nGameManager.prototype.isGameTerminated = function () {\n  return this.over || (this.won && !this.keepPlaying);\n};\n\n// Set up the game\nGameManager.prototype.setup = function () {\n  var previousState = this.storageManager.getGameState();\n\n  // Reload the game from a previous game if present\n  if (previousState) {\n    this.grid        = new Grid(previousState.grid.size,\n                                previousState.grid.cells); // Reload grid\n    this.score       = previousState.score;\n    this.over        = previousState.over;\n    this.won         = previousState.won;\n    this.keepPlaying = previousState.keepPlaying;\n  } else {\n    this.grid        = new Grid(this.size);\n    this.score       = 0;\n    this.over        = false;\n    this.won         = false;\n    this.keepPlaying = false;\n\n    // Add the initial tiles\n    this.addStartTiles();\n  }\n\n  // Update the actuator\n  this.actuate();\n};\n\n// Set up the initial tiles to start the game with\nGameManager.prototype.addStartTiles = function () {\n  for (var i = 0; i < this.startTiles; i++) {\n    this.addRandomTile();\n  }\n};\n\n// Adds a tile in a random position\nGameManager.prototype.addRandomTile = function () {\n  if (this.grid.cellsAvailable()) {\n    var value = Math.random() < 0.9 ? 2 : 4;\n    var tile = new Tile(this.grid.randomAvailableCell(), value);\n\n    this.grid.insertTile(tile);\n  }\n};\n\n// Sends the updated grid to the actuator\nGameManager.prototype.actuate = function () {\n  if (this.storageManager.getBestScore() < this.score) {\n    this.storageManager.setBestScore(this.score);\n  }\n\n  // Clear the state when the game is over (game over only, not win)\n  if (this.over) {\n    this.storageManager.clearGameState();\n  } else {\n    this.storageManager.setGameState(this.serialize());\n  }\n\n  this.actuator.actuate(this.grid, {\n    score:      this.score,\n    over:       this.over,\n    won:        this.won,\n    bestScore:  this.storageManager.getBestScore(),\n    terminated: this.isGameTerminated()\n  });\n\n};\n\n// Represent the current game as an object\nGameManager.prototype.serialize = function () {\n  return {\n    grid:        this.grid.serialize(),\n    score:       this.score,\n    over:        this.over,\n    won:         this.won,\n    keepPlaying: this.keepPlaying\n  };\n};\n\n// Save all tile positions and remove merger info\nGameManager.prototype.prepareTiles = function () {\n  this.grid.eachCell(function (x, y, tile) {\n    if (tile) {\n      tile.mergedFrom = null;\n      tile.savePosition();\n    }\n  });\n};\n\n// Move a tile and its representation\nGameManager.prototype.moveTile = function (tile, cell) {\n  this.grid.cells[tile.x][tile.y] = null;\n  this.grid.cells[cell.x][cell.y] = tile;\n  tile.updatePosition(cell);\n};\n\n// Move tiles on the grid in the specified direction\nGameManager.prototype.move = function (direction) {\n  // 0: up, 1: right, 2: down, 3: left\n  var self = this;\n\n  if (this.isGameTerminated()) return; // Don't do anything if the game's over\n\n  var cell, tile;\n\n  var vector     = this.getVector(direction);\n  var traversals = this.buildTraversals(vector);\n  var moved      = false;\n\n  // Save the current tile positions and remove merger information\n  this.prepareTiles();\n\n  // Traverse the grid in the right direction and move tiles\n  traversals.x.forEach(function (x) {\n    traversals.y.forEach(function (y) {\n      cell = { x: x, y: y };\n      tile = self.grid.cellContent(cell);\n\n      if (tile) {\n        var positions = self.findFarthestPosition(cell, vector);\n        var next      = self.grid.cellContent(positions.next);\n\n        // Only one merger per row traversal?\n        if (next && next.value === tile.value && !next.mergedFrom) {\n          var merged = new Tile(positions.next, tile.value * 2);\n          merged.mergedFrom = [tile, next];\n\n          self.grid.insertTile(merged);\n          self.grid.removeTile(tile);\n\n          // Converge the two tiles' positions\n          tile.updatePosition(positions.next);\n\n          // Update the score\n          self.score += merged.value;\n\n          // The mighty 2048 tile\n          if (merged.value === 2048) self.won = true;\n        } else {\n          self.moveTile(tile, positions.farthest);\n        }\n\n        if (!self.positionsEqual(cell, tile)) {\n          moved = true; // The tile moved from its original cell!\n        }\n      }\n    });\n  });\n\n  if (moved) {\n    this.addRandomTile();\n\n    if (!this.movesAvailable()) {\n      this.over = true; // Game over!\n    }\n\n    this.actuate();\n  }\n};\n\n// Get the vector representing the chosen direction\nGameManager.prototype.getVector = function (direction) {\n  // Vectors representing tile movement\n  var map = {\n    0: { x: 0,  y: -1 }, // Up\n    1: { x: 1,  y: 0 },  // Right\n    2: { x: 0,  y: 1 },  // Down\n    3: { x: -1, y: 0 }   // Left\n  };\n\n  return map[direction];\n};\n\n// Build a list of positions to traverse in the right order\nGameManager.prototype.buildTraversals = function (vector) {\n  var traversals = { x: [], y: [] };\n\n  for (var pos = 0; pos < this.size; pos++) {\n    traversals.x.push(pos);\n    traversals.y.push(pos);\n  }\n\n  // Always traverse from the farthest cell in the chosen direction\n  if (vector.x === 1) traversals.x = traversals.x.reverse();\n  if (vector.y === 1) traversals.y = traversals.y.reverse();\n\n  return traversals;\n};\n\nGameManager.prototype.findFarthestPosition = function (cell, vector) {\n  var previous;\n\n  // Progress towards the vector direction until an obstacle is found\n  do {\n    previous = cell;\n    cell     = { x: previous.x + vector.x, y: previous.y + vector.y };\n  } while (this.grid.withinBounds(cell) &&\n           this.grid.cellAvailable(cell));\n\n  return {\n    farthest: previous,\n    next: cell // Used to check if a merge is required\n  };\n};\n\nGameManager.prototype.movesAvailable = function () {\n  return this.grid.cellsAvailable() || this.tileMatchesAvailable();\n};\n\n// Check for available matches between tiles (more expensive check)\nGameManager.prototype.tileMatchesAvailable = function () {\n  var self = this;\n\n  var tile;\n\n  for (var x = 0; x < this.size; x++) {\n    for (var y = 0; y < this.size; y++) {\n      tile = this.grid.cellContent({ x: x, y: y });\n\n      if (tile) {\n        for (var direction = 0; direction < 4; direction++) {\n          var vector = self.getVector(direction);\n          var cell   = { x: x + vector.x, y: y + vector.y };\n\n          var other  = self.grid.cellContent(cell);\n\n          if (other && other.value === tile.value) {\n            return true; // These two tiles can be merged\n          }\n        }\n      }\n    }\n  }\n\n  return false;\n};\n\nGameManager.prototype.positionsEqual = function (first, second) {\n  return first.x === second.x && first.y === second.y;\n};\n\nexport default GameManager;\n","function KeyboardInputManager() {\n  this.events = {};\n\n  if (window.navigator.msPointerEnabled) {\n    //Internet Explorer 10 style\n    this.eventTouchstart    = \"MSPointerDown\";\n    this.eventTouchmove     = \"MSPointerMove\";\n    this.eventTouchend      = \"MSPointerUp\";\n  } else {\n    this.eventTouchstart    = \"touchstart\";\n    this.eventTouchmove     = \"touchmove\";\n    this.eventTouchend      = \"touchend\";\n  }\n\n  this.listen();\n}\n\nKeyboardInputManager.prototype.on = function (event, callback) {\n  if (!this.events[event]) {\n    this.events[event] = [];\n  }\n  this.events[event].push(callback);\n};\n\nKeyboardInputManager.prototype.emit = function (event, data) {\n  var callbacks = this.events[event];\n  if (callbacks) {\n    callbacks.forEach(function (callback) {\n      callback(data);\n    });\n  }\n};\n\nKeyboardInputManager.prototype.listen = function () {\n  var self = this;\n\n  var map = {\n    38: 0, // Up\n    39: 1, // Right\n    40: 2, // Down\n    37: 3, // Left\n    75: 0, // Vim up\n    76: 1, // Vim right\n    74: 2, // Vim down\n    72: 3, // Vim left\n    87: 0, // W\n    68: 1, // D\n    83: 2, // S\n    65: 3  // A\n  };\n\n  // Respond to direction keys\n  document.addEventListener(\"keydown\", function (event) {\n    var modifiers = event.altKey || event.ctrlKey || event.metaKey ||\n                    event.shiftKey;\n    var mapped    = map[event.which];\n\n    if (!modifiers) {\n      if (mapped !== undefined) {\n        event.preventDefault();\n        self.emit(\"move\", mapped);\n      }\n    }\n\n    // R key restarts the game\n    if (!modifiers && event.which === 82) {\n      self.restart.call(self, event);\n    }\n  });\n\n  // Respond to button presses\n  this.bindButtonPress(\".retry-button\", this.restart);\n  this.bindButtonPress(\".restart-button\", this.restart);\n  this.bindButtonPress(\".keep-playing-button\", this.keepPlaying);\n\n  // Respond to swipe events\n  var touchStartClientX, touchStartClientY;\n  var gameContainer = document.getElementsByClassName(\"game-container\")[0];\n\n  gameContainer.addEventListener(this.eventTouchstart, function (event) {\n    if ((!window.navigator.msPointerEnabled && event.touches.length > 1) ||\n        event.targetTouches.length > 1) {\n      return; // Ignore if touching with more than 1 finger\n    }\n\n    if (window.navigator.msPointerEnabled) {\n      touchStartClientX = event.pageX;\n      touchStartClientY = event.pageY;\n    } else {\n      touchStartClientX = event.touches[0].clientX;\n      touchStartClientY = event.touches[0].clientY;\n    }\n\n    event.preventDefault();\n  });\n\n  gameContainer.addEventListener(this.eventTouchmove, function (event) {\n    event.preventDefault();\n  });\n\n  gameContainer.addEventListener(this.eventTouchend, function (event) {\n    if ((!window.navigator.msPointerEnabled && event.touches.length > 0) ||\n        event.targetTouches.length > 0) {\n      return; // Ignore if still touching with one or more fingers\n    }\n\n    var touchEndClientX, touchEndClientY;\n\n    if (window.navigator.msPointerEnabled) {\n      touchEndClientX = event.pageX;\n      touchEndClientY = event.pageY;\n    } else {\n      touchEndClientX = event.changedTouches[0].clientX;\n      touchEndClientY = event.changedTouches[0].clientY;\n    }\n\n    var dx = touchEndClientX - touchStartClientX;\n    var absDx = Math.abs(dx);\n\n    var dy = touchEndClientY - touchStartClientY;\n    var absDy = Math.abs(dy);\n\n    if (Math.max(absDx, absDy) > 10) {\n      // (right : left) : (down : up)\n      self.emit(\"move\", absDx > absDy ? (dx > 0 ? 1 : 3) : (dy > 0 ? 2 : 0));\n    }\n  });\n};\n\nKeyboardInputManager.prototype.restart = function (event) {\n  event.preventDefault();\n  this.emit(\"restart\");\n};\n\nKeyboardInputManager.prototype.keepPlaying = function (event) {\n  event.preventDefault();\n  this.emit(\"keepPlaying\");\n};\n\nKeyboardInputManager.prototype.bindButtonPress = function (selector, fn) {\n  var button = document.querySelector(selector);\n  button.addEventListener(\"click\", fn.bind(this));\n  button.addEventListener(this.eventTouchend, fn.bind(this));\n};\n\nexport default KeyboardInputManager;\n","function HTMLActuator() {\n  this.tileContainer    = document.querySelector(\".tile-container\");\n  this.scoreContainer   = document.querySelector(\".score-container\");\n  this.bestContainer    = document.querySelector(\".best-container\");\n  this.messageContainer = document.querySelector(\".game-message\");\n\n  this.score = 0;\n}\n\nHTMLActuator.prototype.actuate = function (grid, metadata) {\n  var self = this;\n\n  window.requestAnimationFrame(function () {\n    self.clearContainer(self.tileContainer);\n\n    grid.cells.forEach(function (column) {\n      column.forEach(function (cell) {\n        if (cell) {\n          self.addTile(cell);\n        }\n      });\n    });\n\n    self.updateScore(metadata.score);\n    self.updateBestScore(metadata.bestScore);\n\n    if (metadata.terminated) {\n      if (metadata.over) {\n        self.message(false); // You lose\n      } else if (metadata.won) {\n        self.message(true); // You win!\n      }\n    }\n\n  });\n};\n\n// Continues the game (both restart and keep playing)\nHTMLActuator.prototype.continueGame = function () {\n  this.clearMessage();\n};\n\nHTMLActuator.prototype.clearContainer = function (container) {\n  while (container.firstChild) {\n    container.removeChild(container.firstChild);\n  }\n};\n\nHTMLActuator.prototype.addTile = function (tile) {\n  var self = this;\n\n  var wrapper   = document.createElement(\"div\");\n  var inner     = document.createElement(\"div\");\n  var position  = tile.previousPosition || { x: tile.x, y: tile.y };\n  var positionClass = this.positionClass(position);\n\n  // We can't use classlist because it somehow glitches when replacing classes\n  var classes = [\"tile\", \"tile-\" + tile.value, positionClass];\n\n  if (tile.value > 2048) classes.push(\"tile-super\");\n\n  this.applyClasses(wrapper, classes);\n\n  inner.classList.add(\"tile-inner\");\n  inner.textContent = tile.value;\n\n  if (tile.previousPosition) {\n    // Make sure that the tile gets rendered in the previous position first\n    window.requestAnimationFrame(function () {\n      classes[2] = self.positionClass({ x: tile.x, y: tile.y });\n      self.applyClasses(wrapper, classes); // Update the position\n    });\n  } else if (tile.mergedFrom) {\n    classes.push(\"tile-merged\");\n    this.applyClasses(wrapper, classes);\n\n    // Render the tiles that merged\n    tile.mergedFrom.forEach(function (merged) {\n      self.addTile(merged);\n    });\n  } else {\n    classes.push(\"tile-new\");\n    this.applyClasses(wrapper, classes);\n  }\n\n  // Add the inner part of the tile to the wrapper\n  wrapper.appendChild(inner);\n\n  // Put the tile on the board\n  this.tileContainer.appendChild(wrapper);\n};\n\nHTMLActuator.prototype.applyClasses = function (element, classes) {\n  element.setAttribute(\"class\", classes.join(\" \"));\n};\n\nHTMLActuator.prototype.normalizePosition = function (position) {\n  return { x: position.x + 1, y: position.y + 1 };\n};\n\nHTMLActuator.prototype.positionClass = function (position) {\n  position = this.normalizePosition(position);\n  return \"tile-position-\" + position.x + \"-\" + position.y;\n};\n\nHTMLActuator.prototype.updateScore = function (score) {\n  this.clearContainer(this.scoreContainer);\n\n  var difference = score - this.score;\n  this.score = score;\n\n  this.scoreContainer.textContent = this.score;\n\n  if (difference > 0) {\n    var addition = document.createElement(\"div\");\n    addition.classList.add(\"score-addition\");\n    addition.textContent = \"+\" + difference;\n\n    this.scoreContainer.appendChild(addition);\n  }\n};\n\nHTMLActuator.prototype.updateBestScore = function (bestScore) {\n  this.bestContainer.textContent = bestScore;\n};\n\nHTMLActuator.prototype.message = function (won) {\n  var type    = won ? \"game-won\" : \"game-over\";\n  var message = won ? \"You win!\" : \"Game over!\";\n\n  this.messageContainer.classList.add(type);\n  this.messageContainer.getElementsByTagName(\"p\")[0].textContent = message;\n};\n\nHTMLActuator.prototype.clearMessage = function () {\n  // IE only takes one value to remove at a time.\n  this.messageContainer.classList.remove(\"game-won\");\n  this.messageContainer.classList.remove(\"game-over\");\n};\n\nexport default HTMLActuator;\n","window.fakeStorage = {\n  _data: {},\n\n  setItem: function (id, val) {\n    return this._data[id] = String(val);\n  },\n\n  getItem: function (id) {\n    return this._data.hasOwnProperty(id) ? this._data[id] : undefined;\n  },\n\n  removeItem: function (id) {\n    return delete this._data[id];\n  },\n\n  clear: function () {\n    return this._data = {};\n  }\n};\n\nfunction LocalStorageManager() {\n  this.bestScoreKey     = \"bestScore\";\n  this.gameStateKey     = \"gameState\";\n\n  var supported = this.localStorageSupported();\n  this.storage = supported ? window.localStorage : window.fakeStorage;\n}\n\nLocalStorageManager.prototype.localStorageSupported = function () {\n  var testKey = \"test\";\n\n  try {\n    var storage = window.localStorage;\n    storage.setItem(testKey, \"1\");\n    storage.removeItem(testKey);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\n// Best score getters/setters\nLocalStorageManager.prototype.getBestScore = function () {\n  return this.storage.getItem(this.bestScoreKey) || 0;\n};\n\nLocalStorageManager.prototype.setBestScore = function (score) {\n  this.storage.setItem(this.bestScoreKey, score);\n};\n\n// Game state getters/setters and clearing\nLocalStorageManager.prototype.getGameState = function () {\n  var stateJSON = this.storage.getItem(this.gameStateKey);\n  return stateJSON ? JSON.parse(stateJSON) : null;\n};\n\nLocalStorageManager.prototype.setGameState = function (gameState) {\n  this.storage.setItem(this.gameStateKey, JSON.stringify(gameState));\n};\n\nLocalStorageManager.prototype.clearGameState = function () {\n  this.storage.removeItem(this.gameStateKey);\n};\n\nexport default LocalStorageManager;\n","/**\n * 2018/1/25\n *\n * Copyright(c) Alibaba Group Holding Limited.\n *\n * Authors:\n *   乔杨 <peiqiao.ppq@alipay.com>\n */\n\n'use strict'\n\nimport GameManager from '../js/game_manager'\nimport KeyboardInputManager from '../js/keyboard_input_manager'\nimport HTMLActuator from '../js/html_actuator'\nimport LocalStorageManager from '../js/local_storage_manager'\n\nclass Game {\n  constructor (args) {\n    console.log('init')\n    this.gameManager = new GameManager(4, KeyboardInputManager, HTMLActuator, LocalStorageManager)\n  }\n}\n\nexport default Game\n"],"names":["Tile","position","value","x","y","previousPosition","mergedFrom","prototype","savePosition","updatePosition","serialize","Grid","size","previousState","cells","fromState","empty","row","push","state","tile","randomAvailableCell","availableCells","length","Math","floor","random","eachCell","callback","cellsAvailable","cellAvailable","cell","cellOccupied","cellContent","withinBounds","insertTile","removeTile","cellState","GameManager","InputManager","Actuator","StorageManager","inputManager","storageManager","actuator","startTiles","on","move","bind","restart","keepPlaying","setup","clearGameState","continueGame","isGameTerminated","over","won","getGameState","grid","score","addStartTiles","actuate","i","addRandomTile","getBestScore","setBestScore","setGameState","prepareTiles","moveTile","direction","self","vector","getVector","traversals","buildTraversals","moved","forEach","positions","findFarthestPosition","next","merged","farthest","positionsEqual","movesAvailable","map","pos","reverse","previous","tileMatchesAvailable","other","first","second","KeyboardInputManager","events","window","navigator","msPointerEnabled","eventTouchstart","eventTouchmove","eventTouchend","listen","event","emit","data","callbacks","addEventListener","modifiers","altKey","ctrlKey","metaKey","shiftKey","mapped","which","undefined","preventDefault","call","bindButtonPress","touchStartClientX","touchStartClientY","gameContainer","document","getElementsByClassName","touches","targetTouches","pageX","pageY","clientX","clientY","touchEndClientX","touchEndClientY","changedTouches","dx","absDx","abs","dy","absDy","max","selector","fn","button","querySelector","HTMLActuator","tileContainer","scoreContainer","bestContainer","messageContainer","metadata","requestAnimationFrame","clearContainer","column","addTile","updateScore","updateBestScore","bestScore","terminated","message","clearMessage","container","firstChild","removeChild","wrapper","createElement","inner","positionClass","classes","applyClasses","classList","add","textContent","appendChild","element","setAttribute","join","normalizePosition","difference","addition","type","getElementsByTagName","remove","fakeStorage","id","val","_data","String","hasOwnProperty","LocalStorageManager","bestScoreKey","gameStateKey","supported","localStorageSupported","storage","localStorage","testKey","setItem","removeItem","error","getItem","stateJSON","JSON","parse","gameState","stringify","Game","args","log","gameManager"],"mappings":"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"}